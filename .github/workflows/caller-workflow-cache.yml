name: compile-and-analyze-with-cache

on:
  workflow_dispatch

jobs:
  compile:
    runs-on: ubuntu-latest
    outputs:
      build-cache-key: ${{ steps.set-cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate cache key
        id: set-cache-key
        run: echo "key=build-${{ runner.os }}-${{ hashFiles('src/**/*.c', 'src/**/*.h') }}" >> $GITHUB_OUTPUT

      - name: Create build directory
        run: mkdir -p build

      - name: Compile C code
        run: gcc -Wall -Werror -o build/myapp src/sample.c

      - name: Save build output to cache
        uses: actions/cache/save@v4
        with:
          path: build/
          key: ${{ steps.set-cache-key.outputs.key }}

  static-analysis:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore build cache from compile job
        uses: actions/cache@v4
        with:
          path: build/
          key: ${{ needs.compile.outputs.build-cache-key }}
          restore-keys: |
            build-${{ runner.os }}-

      - name: Install cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck

      - name: Run Static Code Analysis
        run: cppcheck src/ --enable=all --inconclusive --error-exitcode=1
